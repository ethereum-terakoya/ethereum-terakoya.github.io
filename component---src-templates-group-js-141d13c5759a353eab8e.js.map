{"version":3,"sources":["webpack:///./src/templates/group.js","webpack:///./src/components/seo.js"],"names":["Category","pageContext","data","intl","useIntl","group","toUpperCase","title","className","formatMessage","id","allMdx","edges","map","post","node","key","frontmatter","slug","md","date","to","parent","relativeDirectory","query","SEO","description","children","image","useStaticQuery","site","ogImageDefault","ogImage","siteMetadata","siteUrl","concat","childImageSharp","fixed","src","ogUrl","window","location","href","titleTemplate","name","content","property","author"],"mappings":"2FAAA,0JAmDeA,UAvCE,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,KACzBC,EAAOC,cACPC,EAAQJ,EAAYI,MAAMC,cAEhC,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAOF,IACZ,kBAAC,IAAD,CAAWG,UAAU,QACnB,kBAAC,IAAD,CAAKA,UAAU,QACb,kBAAC,IAAD,KACE,wBAAIA,UAAU,oBACXH,EADH,IACWF,EAAKM,cAAc,CAAEC,GAAI,WAEpC,2BAAIP,EAAKM,cAAc,CAAEC,GAAI,aAGjC,wBAAIF,UAAU,iBACXN,EAAKS,OAAOC,MAAMC,KAAI,gBAASC,EAAT,EAAGC,KAAH,OACrB,wBAAIC,IAAKF,EAAKG,YAAYC,KAAMV,UAAU,kBACxC,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKW,GAAI,GAAIL,EAAKG,YAAYG,MAC9B,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,GAAE,IAAMpB,EAAYI,MAAlB,IAA2BS,EAAKQ,OAAOC,mBAEzC,uBAAGf,UAAU,uBACVM,EAAKG,YAAYV,kBAejC,IAAMiB,EAAK,c,kCCrDlB,iDAsDeC,IAlDH,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,YAAaC,EAA6B,EAA7BA,SAAUpB,EAAmB,EAAnBA,MAAOqB,EAAY,EAAZA,MAAY,EACtBC,yBAAe,cAAxCC,EAD+C,EAC/CA,KAAMC,EADyC,EACzCA,eAsBRC,EAAUJ,EACZE,EAAKG,aAAaC,QAAQC,OAAOP,GACjCE,EAAKG,aAAaC,QAAQC,OACxBJ,EAAeK,gBAAgBC,MAAMC,KAGrCC,EAA0B,oBAAXC,OAAyBA,OAAOC,SAASC,KAAO,GAErE,OACE,kBAAC,IAAD,CAAQnC,MAAOA,EAAOoC,cAAa,QAAUb,EAAKG,aAAa1B,OAC7D,0BAAMqC,KAAK,cAAcC,QAASnB,IAClC,0BAAMoB,SAAS,WAAWD,QAAStC,IACnC,0BAAMuC,SAAS,iBAAiBD,QAASnB,IACzC,0BAAMoB,SAAS,WAAWD,QAASb,IACnC,0BAAMc,SAAS,UAAUD,QAAQ,YACjC,0BAAMC,SAAS,eAAeD,QAASf,EAAKG,aAAa1B,QACzD,0BAAMuC,SAAS,SAASD,QAASN,IACjC,0BAAMK,KAAK,eAAeC,QAAQ,YAClC,0BAAMD,KAAK,kBAAkBC,QAASf,EAAKG,aAAac,SACxD,0BAAMH,KAAK,gBAAgBC,QAAStC,IACpC,0BAAMqC,KAAK,gBAAgBC,QAASb,IACpC,0BAAMY,KAAK,sBAAsBC,QAASnB,IACzCC","file":"component---src-templates-group-js-141d13c5759a353eab8e.js","sourcesContent":["import React from \"react\";\r\nimport { graphql } from \"gatsby\";\r\nimport { LocalizedLink } from \"gatsby-theme-i18n\";\r\nimport { useIntl } from \"react-intl\";\r\n\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\n\r\nimport Layout from \"../components/layout\";\r\nimport SEO from \"../components/seo\";\r\n\r\nconst Category = ({ pageContext, data }) => {\r\n  const intl = useIntl();\r\n  const group = pageContext.group.toUpperCase();\r\n\r\n  return (\r\n    <Layout>\r\n      <SEO title={group} />\r\n      <Container className=\"py-5\">\r\n        <Row className=\"mb-5\">\r\n          <Col>\r\n            <h1 className=\"font-weight-bold\">\r\n              {group} {intl.formatMessage({ id: \"group\" })}\r\n            </h1>\r\n            <p>{intl.formatMessage({ id: \"posts\" })}</p>\r\n          </Col>\r\n        </Row>\r\n        <ul className=\"list-unstyled\">\r\n          {data.allMdx.edges.map(({ node: post }) => (\r\n            <li key={post.frontmatter.slug} className=\"post-list-item\">\r\n              <Row>\r\n                <Col md={3}>{post.frontmatter.date}</Col>\r\n                <Col>\r\n                  <LocalizedLink\r\n                    to={`/${pageContext.group}/${post.parent.relativeDirectory}`}\r\n                  >\r\n                    <b className=\"h3 font-weight-bold\">\r\n                      {post.frontmatter.title}\r\n                    </b>\r\n                  </LocalizedLink>\r\n                </Col>\r\n              </Row>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </Container>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Category;\r\n\r\nexport const query = graphql`\r\n  query($locale: String!, $group: String!, $dateFormat: String!) {\r\n    allMdx(\r\n      filter: {\r\n        fields: { locale: { eq: $locale } }\r\n        frontmatter: { group: { eq: $group } }\r\n      }\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n    ) {\r\n      edges {\r\n        node {\r\n          frontmatter {\r\n            slug\r\n            title\r\n            date(formatString: $dateFormat)\r\n          }\r\n          parent {\r\n            ... on File {\r\n              relativeDirectory\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { graphql, useStaticQuery } from \"gatsby\";\r\n\r\nconst SEO = ({ description, children, title, image }) => {\r\n  const { site, ogImageDefault } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            author\r\n            siteUrl\r\n            title\r\n          }\r\n        }\r\n        ogImageDefault: file(relativePath: { eq: \"header.png\" }) {\r\n          childImageSharp {\r\n            fixed(width: 1200) {\r\n              src\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `\r\n  );\r\n\r\n  const ogImage = image\r\n    ? site.siteMetadata.siteUrl.concat(image)\r\n    : site.siteMetadata.siteUrl.concat(\r\n        ogImageDefault.childImageSharp.fixed.src\r\n      );\r\n\r\n  const ogUrl = typeof window !== \"undefined\" ? window.location.href : \"\";\r\n\r\n  return (\r\n    <Helmet title={title} titleTemplate={`%s | ${site.siteMetadata.title}`}>\r\n      <meta name=\"description\" content={description} />\r\n      <meta property=\"og:title\" content={title} />\r\n      <meta property=\"og:description\" content={description} />\r\n      <meta property=\"og:image\" content={ogImage} />\r\n      <meta property=\"og:type\" content=\"website\" />\r\n      <meta property=\"og:site_name\" content={site.siteMetadata.title} />\r\n      <meta property=\"og:url\" content={ogUrl} />\r\n      <meta name=\"twitter:card\" content=\"summary\" />\r\n      <meta name=\"twitter:creator\" content={site.siteMetadata.author} />\r\n      <meta name=\"twitter:title\" content={title} />\r\n      <meta name=\"twitter:image\" content={ogImage} />\r\n      <meta name=\"twitter:description\" content={description} />\r\n      {children}\r\n    </Helmet>\r\n  );\r\n};\r\n\r\nexport default SEO;\r\n"],"sourceRoot":""}