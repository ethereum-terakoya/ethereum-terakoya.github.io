{"version":3,"sources":["webpack:///./src/pages/news.js","webpack:///./src/components/seo.js"],"names":["News","title","SEO","description","children","image","useStaticQuery","site","ogImageDefault","ogImage","siteMetadata","siteUrl","concat","childImageSharp","fixed","src","ogUrl","window","location","href","titleTemplate","name","content","property","author"],"mappings":"2FAAA,4FAwBeA,UAfF,WACX,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAO,SACZ,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,oD,kCChBZ,iDAsDeC,IAlDH,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,YAAaC,EAA6B,EAA7BA,SAAUH,EAAmB,EAAnBA,MAAOI,EAAY,EAAZA,MAAY,EACtBC,yBAAe,cAAxCC,EAD+C,EAC/CA,KAAMC,EADyC,EACzCA,eAsBRC,EAAUJ,EACZE,EAAKG,aAAaC,QAAQC,OAAOP,GACjCE,EAAKG,aAAaC,QAAQC,OACxBJ,EAAeK,gBAAgBC,MAAMC,KAGrCC,EAA0B,oBAAXC,OAAyBA,OAAOC,SAASC,KAAO,GAErE,OACE,kBAAC,IAAD,CAAQlB,MAAOA,EAAOmB,cAAa,QAAUb,EAAKG,aAAaT,OAC7D,0BAAMoB,KAAK,cAAcC,QAASnB,IAClC,0BAAMoB,SAAS,WAAWD,QAASrB,IACnC,0BAAMsB,SAAS,iBAAiBD,QAASnB,IACzC,0BAAMoB,SAAS,WAAWD,QAASb,IACnC,0BAAMc,SAAS,UAAUD,QAAQ,YACjC,0BAAMC,SAAS,eAAeD,QAASf,EAAKG,aAAaT,QACzD,0BAAMsB,SAAS,SAASD,QAASN,IACjC,0BAAMK,KAAK,eAAeC,QAAQ,YAClC,0BAAMD,KAAK,kBAAkBC,QAASf,EAAKG,aAAac,SACxD,0BAAMH,KAAK,gBAAgBC,QAASrB,IACpC,0BAAMoB,KAAK,gBAAgBC,QAASb,IACpC,0BAAMY,KAAK,sBAAsBC,QAASnB,IACzCC","file":"component---src-pages-news-js-548ef66354eda9519d74.js","sourcesContent":["import React from \"react\";\n\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\n\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\n\nconst News = () => {\n  return (\n    <Layout>\n      <SEO title={\"NEWS\"} />\n      <Container>\n        <Row>\n          <Col>\n            <h1>Coming soon...</h1>\n          </Col>\n        </Row>\n      </Container>\n    </Layout>\n  );\n};\n\nexport default News;\n","import React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { graphql, useStaticQuery } from \"gatsby\";\n\nconst SEO = ({ description, children, title, image }) => {\n  const { site, ogImageDefault } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            author\n            siteUrl\n            title\n          }\n        }\n        ogImageDefault: file(relativePath: { eq: \"header.png\" }) {\n          childImageSharp {\n            fixed(width: 1200) {\n              src\n            }\n          }\n        }\n      }\n    `\n  );\n\n  const ogImage = image\n    ? site.siteMetadata.siteUrl.concat(image)\n    : site.siteMetadata.siteUrl.concat(\n        ogImageDefault.childImageSharp.fixed.src\n      );\n\n  const ogUrl = typeof window !== \"undefined\" ? window.location.href : \"\";\n\n  return (\n    <Helmet title={title} titleTemplate={`%s | ${site.siteMetadata.title}`}>\n      <meta name=\"description\" content={description} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:image\" content={ogImage} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:site_name\" content={site.siteMetadata.title} />\n      <meta property=\"og:url\" content={ogUrl} />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={site.siteMetadata.author} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:image\" content={ogImage} />\n      <meta name=\"twitter:description\" content={description} />\n      {children}\n    </Helmet>\n  );\n};\n\nexport default SEO;\n"],"sourceRoot":""}