{"version":3,"sources":["webpack:///./src/templates/group.js","webpack:///./src/components/seo.js"],"names":["Category","_ref","pageContext","data","intl","useIntl","group","toUpperCase","React","createElement","Layout","SEO","title","Container","className","Row","Col","formatMessage","id","allMdx","edges","map","_ref2","node","post","key","frontmatter","slug","md","date","LocalizedLink","to","parent","relativeDirectory","description","children","image","site","ogImageDefault","useStaticQuery","ogImage","siteMetadata","siteUrl","concat","childImageSharp","fixed","src","ogUrl","window","location","href","Helmet","titleTemplate","name","content","property","author"],"mappings":"2FAAA,oHAqDeA,UAzCEC,IAA4B,IAA3B,YAAEC,EAAW,KAAEC,GAAMF,EACrC,MAAMG,EAAOC,cACPC,EAAQJ,EAAYI,MAAMC,cAEhC,OACEC,IAAAC,cAACC,IAAM,KACLF,IAAAC,cAACE,IAAG,CAACC,MAAON,IACZE,IAAAC,cAACI,IAAS,CAACC,UAAU,QACnBN,IAAAC,cAACM,IAAG,CAACD,UAAU,QACbN,IAAAC,cAACO,IAAG,KACFR,IAAAC,cAAA,MAAIK,UAAU,oBACXV,EAAKa,cAAc,CAAEC,GAAG,aAAchB,EAAYI,QAAW,IAE7DF,EAAKa,cAAc,CAAEC,GAAI,WAE5BV,IAAAC,cAAA,SAAIL,EAAKa,cAAc,CAAEC,GAAI,aAGjCV,IAAAC,cAAA,MAAIK,UAAU,iBACXX,EAAKgB,OAAOC,MAAMC,IAAIC,IAAA,IAAGC,KAAMC,GAAMF,EAAA,OACpCd,IAAAC,cAAA,MAAIgB,IAAKD,EAAKE,YAAYC,KAAMb,UAAU,kBACxCN,IAAAC,cAACM,IAAG,KACFP,IAAAC,cAACO,IAAG,CAACY,GAAI,GAAIJ,EAAKE,YAAYG,MAC9BrB,IAAAC,cAACO,IAAG,KACFR,IAAAC,cAACqB,IAAa,CACZC,GAAE,IAAM7B,EAAYI,MAAK,IAAIkB,EAAKQ,OAAOC,mBAEzCzB,IAAAC,cAAA,KAAGK,UAAU,uBACVU,EAAKE,YAAYd,kB,kCCxCxC,iDAsDeD,IAlDHV,IAA8C,IAA7C,YAAEiC,EAAW,SAAEC,EAAQ,MAAEvB,EAAK,MAAEwB,GAAOnC,EAClD,MAAM,KAAEoC,EAAI,eAAEC,GAAmBC,yBAAe,cAsB1CC,EAAUJ,EACZC,EAAKI,aAAaC,QAAQC,OAAOP,GACjCC,EAAKI,aAAaC,QAAQC,OACxBL,EAAeM,gBAAgBC,MAAMC,KAGrCC,EAA0B,oBAAXC,OAAyBA,OAAOC,SAASC,KAAO,GAErE,OACE1C,IAAAC,cAAC0C,IAAM,CAACvC,MAAOA,EAAOwC,cAAa,QAAUf,EAAKI,aAAa7B,OAC7DJ,IAAAC,cAAA,QAAM4C,KAAK,cAAcC,QAASpB,IAClC1B,IAAAC,cAAA,QAAM8C,SAAS,WAAWD,QAAS1C,EAAOa,IAAI,UAC9CjB,IAAAC,cAAA,QAAM8C,SAAS,iBAAiBD,QAASpB,IACzC1B,IAAAC,cAAA,QAAM8C,SAAS,WAAWD,QAASd,EAASf,IAAI,UAChDjB,IAAAC,cAAA,QAAM8C,SAAS,UAAUD,QAAQ,YACjC9C,IAAAC,cAAA,QAAM8C,SAAS,eAAeD,QAASjB,EAAKI,aAAa7B,QACzDJ,IAAAC,cAAA,QAAM8C,SAAS,SAASD,QAASP,IACjCvC,IAAAC,cAAA,QAAM4C,KAAK,eAAeC,QAAQ,sBAAsB7B,IAAI,cAC5DjB,IAAAC,cAAA,QAAM4C,KAAK,kBAAkBC,QAASjB,EAAKI,aAAae,SACxDhD,IAAAC,cAAA,QAAM4C,KAAK,gBAAgBC,QAAS1C,IACpCJ,IAAAC,cAAA,QAAM4C,KAAK,gBAAgBC,QAASd,IACpChC,IAAAC,cAAA,QAAM4C,KAAK,sBAAsBC,QAASpB,IACzCC","file":"component---src-templates-group-js-af05faa3bab9beb638d9.js","sourcesContent":["import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport { LocalizedLink } from \"gatsby-theme-i18n\";\nimport { useIntl } from \"react-intl\";\n\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\n\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\n\nconst Category = ({ pageContext, data }) => {\n  const intl = useIntl();\n  const group = pageContext.group.toUpperCase();\n\n  return (\n    <Layout>\n      <SEO title={group} />\n      <Container className=\"py-5\">\n        <Row className=\"mb-5\">\n          <Col>\n            <h1 className=\"font-weight-bold\">\n              {intl.formatMessage({ id: `groupName_${pageContext.group}` })}\n              &nbsp;\n              {intl.formatMessage({ id: \"group\" })}\n            </h1>\n            <p>{intl.formatMessage({ id: \"posts\" })}</p>\n          </Col>\n        </Row>\n        <ul className=\"list-unstyled\">\n          {data.allMdx.edges.map(({ node: post }) => (\n            <li key={post.frontmatter.slug} className=\"post-list-item\">\n              <Row>\n                <Col md={3}>{post.frontmatter.date}</Col>\n                <Col>\n                  <LocalizedLink\n                    to={`/${pageContext.group}/${post.parent.relativeDirectory}`}\n                  >\n                    <b className=\"h3 font-weight-bold\">\n                      {post.frontmatter.title}\n                    </b>\n                  </LocalizedLink>\n                </Col>\n              </Row>\n            </li>\n          ))}\n        </ul>\n      </Container>\n    </Layout>\n  );\n};\n\nexport default Category;\n\nexport const query = graphql`\n  query($locale: String!, $group: String!, $dateFormat: String!) {\n    allMdx(\n      filter: {\n        fields: { locale: { eq: $locale } }\n        frontmatter: { group: { eq: $group } }\n      }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            slug\n            title\n            date(formatString: $dateFormat)\n          }\n          parent {\n            ... on File {\n              relativeDirectory\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { graphql, useStaticQuery } from \"gatsby\";\n\nconst SEO = ({ description, children, title, image }) => {\n  const { site, ogImageDefault } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            author\n            siteUrl\n            title\n          }\n        }\n        ogImageDefault: file(relativePath: { eq: \"header.jpg\" }) {\n          childImageSharp {\n            fixed(width: 1200) {\n              src\n            }\n          }\n        }\n      }\n    `\n  );\n\n  const ogImage = image\n    ? site.siteMetadata.siteUrl.concat(image)\n    : site.siteMetadata.siteUrl.concat(\n        ogImageDefault.childImageSharp.fixed.src\n      );\n\n  const ogUrl = typeof window !== \"undefined\" ? window.location.href : \"\";\n\n  return (\n    <Helmet title={title} titleTemplate={`%s | ${site.siteMetadata.title}`}>\n      <meta name=\"description\" content={description} />\n      <meta property=\"og:title\" content={title} key=\"title\" />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:image\" content={ogImage} key=\"image\" />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:site_name\" content={site.siteMetadata.title} />\n      <meta property=\"og:url\" content={ogUrl} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" key=\"misc-card\" />\n      <meta name=\"twitter:creator\" content={site.siteMetadata.author} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:image\" content={ogImage} />\n      <meta name=\"twitter:description\" content={description} />\n      {children}\n    </Helmet>\n  );\n};\n\nexport default SEO;\n"],"sourceRoot":""}