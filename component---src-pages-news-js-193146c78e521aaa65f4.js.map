{"version":3,"sources":["webpack:///./src/pages/news.js","webpack:///./src/components/seo.js"],"names":["News","title","SEO","description","children","image","useStaticQuery","site","ogImageDefault","ogImage","siteMetadata","siteUrl","concat","childImageSharp","fixed","src","titleTemplate","name","content","property","author"],"mappings":"2FAAA,4FAwBeA,UAfF,WACX,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAO,SACZ,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,oD,kCChBZ,iDAoDeC,IAhDH,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,YAAaC,EAA6B,EAA7BA,SAAUH,EAAmB,EAAnBA,MAAOI,EAAY,EAAZA,MAAY,EACtBC,yBAAe,cAAxCC,EAD+C,EAC/CA,KAAMC,EADyC,EACzCA,eAsBRC,EAAUJ,EACZE,EAAKG,aAAaC,QAAQC,OAAOP,GACjCE,EAAKG,aAAaC,QAAQC,OACxBJ,EAAeK,gBAAgBC,MAAMC,KAG3C,OACE,kBAAC,IAAD,CAAQd,MAAOA,EAAOe,cAAa,QAAUT,EAAKG,aAAaT,OAC7D,0BAAMgB,KAAK,cAAcC,QAASf,IAClC,0BAAMgB,SAAS,WAAWD,QAASjB,IACnC,0BAAMkB,SAAS,iBAAiBD,QAASf,IACzC,0BAAMgB,SAAS,WAAWD,QAAST,IACnC,0BAAMU,SAAS,UAAUD,QAAQ,YACjC,0BAAMC,SAAS,eAAeD,QAASX,EAAKG,aAAaT,QACzD,0BAAMkB,SAAS,SAASD,QAASX,EAAKG,aAAaC,UACnD,0BAAMM,KAAK,eAAeC,QAAQ,YAClC,0BAAMD,KAAK,kBAAkBC,QAASX,EAAKG,aAAaU,SACxD,0BAAMH,KAAK,gBAAgBC,QAASjB,IACpC,0BAAMgB,KAAK,gBAAgBC,QAAST,IACpC,0BAAMQ,KAAK,sBAAsBC,QAASf,IACzCC","file":"component---src-pages-news-js-193146c78e521aaa65f4.js","sourcesContent":["import React from \"react\";\n\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\n\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\n\nconst News = () => {\n  return (\n    <Layout>\n      <SEO title={\"NEWS\"} />\n      <Container>\n        <Row>\n          <Col>\n            <h1>Coming soon...</h1>\n          </Col>\n        </Row>\n      </Container>\n    </Layout>\n  );\n};\n\nexport default News;\n","import React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { graphql, useStaticQuery } from \"gatsby\";\n\nconst SEO = ({ description, children, title, image }) => {\n  const { site, ogImageDefault } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            author\n            siteUrl\n            title\n          }\n        }\n        ogImageDefault: file(relativePath: { eq: \"header.png\" }) {\n          childImageSharp {\n            fixed(width: 1200) {\n              src\n            }\n          }\n        }\n      }\n    `\n  );\n\n  const ogImage = image\n    ? site.siteMetadata.siteUrl.concat(image)\n    : site.siteMetadata.siteUrl.concat(\n        ogImageDefault.childImageSharp.fixed.src\n      );\n\n  return (\n    <Helmet title={title} titleTemplate={`%s | ${site.siteMetadata.title}`}>\n      <meta name=\"description\" content={description} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:image\" content={ogImage} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:site_name\" content={site.siteMetadata.title} />\n      <meta property=\"og:url\" content={site.siteMetadata.siteUrl} />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={site.siteMetadata.author} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:image\" content={ogImage} />\n      <meta name=\"twitter:description\" content={description} />\n      {children}\n    </Helmet>\n  );\n};\n\nexport default SEO;\n"],"sourceRoot":""}